<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hysoft.video.user.dao.UserDao">
       <parameterMap id="userDto" type="com.hysoft.video.user.dto.UserDto"/>
       <resultMap id="userInfo" type="com.hysoft.video.user.dto.UserDto">
           <id column="user_id" property="userId"/>
           <result column="user_name" property="userName"/>
           <result column="user_pwd" property="userPwd"/>
           <result column="user_deposit" property="userDeposit"/>
           <result column="user_income" property="userIncome"/>
           <result column="user_wxpayaccount" property="userWxpayaccount" />
           <result column="user_payaccount" property="userPayaccount"/>
           <result column="create_date" property="createDate"/>
       </resultMap>

    <sql id="userColumns">
        user_id,user_name,user_pwd,IFNULL(user_deposit,0) user_deposit,
        IFNULL(user_income,0) user_income,
        user_wxpayaccount,user_payaccount,
        create_date
    </sql>

    <select id="queryUserlogin" resultMap="userInfo" parameterMap="userDto">
             select <include refid="userColumns"/>
               from em_user_info eui
              where eui.user_name = #{userName} and eui.user_pwd = #{userPwd}
    </select>

    <select id="queryUserInfo" parameterType="java.lang.Integer" resultMap="userInfo">
        select <include refid="userColumns"/>
          from em_user_info eui
         where eui.user_id = #{userId}
    </select>

    <select id="getInfoTotalCount" resultType="com.hysoft.video.user.dto.InfoTotalCount">
        select
           (select count(1)  from em_user_info i) userCount,
           (select count(1)  from em_video_info i where i.video_type = 1)  sysVideoCount,
           (select count(1)  from em_video_info i where i.video_type = 2)  netVideoCount,
           (select sum(IFNULl(see_count,0))   from em_video_info i)  seeCount
        from dual
    </select>

    <select id="getUserList" parameterMap="userDto" resultMap="userInfo">
        SELECT  <include refid="userColumns"/>
          FROM em_user_info
        limit #{pageIndex},#{pageSize}
    </select>

    <insert id="insertRegisterUser" parameterMap="userDto">
          insert into em_user_info(user_Name,user_Pwd) VALUES (#{userName},#{userPwd})
    </insert>

    <update id="updateUserDeposit" parameterMap="userDto">
        UPDATE em_user_info eui set eui.User_deposit = User_deposit + #{userDeposit}
        where eui.user_id = #{userId}
    </update>

    <update id="updateDeposByPayAccount" parameterMap="userDto">
        UPDATE em_user_info eui set eui.User_deposit = User_deposit + #{userDeposit},
                                    eui.user_income = eui.user_income + #{userDeposit}
         where eui.user_payaccount = #{userPayaccount} or eui.user_wxpayaccount = #{userPayaccount}
    </update>

    <update id="updateAddUserIncome" parameterMap="userDto">
        UPDATE em_user_info eui set eui.user_income = eui.User_income + abs(#{userIncome})
        where eui.user_id = #{userId}
    </update>

    <update id="updateReduceUserIncome" parameterMap="userDto">
        update em_user_info eui
           set eui.user_income = eui.user_income - abs(#{userIncome})
         where eui.user_id = #{userId}
           and eui.user_income >= abs(#{userIncome})
    </update>

    <update id="updateUserInfo" parameterMap="userDto">
        UPDATE em_user_info eui
           set eui.user_payaccount = #{userPayaccount},
               eui.user_wxpayaccount = #{userWxpayaccount}
        <if test="userPwd!=null and userPwd!=''">
            ,eui.user_pwd = #{userPwd}
        </if>
         where eui.user_id = #{userId}
    </update>

</mapper>
