<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:property-placeholder location="classpath*:${EMOS_SOURCE_ENV}/*.properties"/>
    <context:component-scan base-package="com.hysoft.video" />

    <bean name="dataSourceParent" class="com.alibaba.druid.pool.DruidDataSource">

    <property name="driverClassName" value="${driverClassName}"/>
    <!-- 初始化连接大小 -->
    <property name="initialSize" value="100" />
    <!-- 连接池最大使用连接数量 -->
    <property name="maxActive" value="500" />
    <!-- 连接池最小空闲 -->
    <property name="minIdle" value="100" />
    <!-- 获取连接最大等待时间 -->
    <property name="maxWait" value="60000" />
    <property name="validationQuery" value="${validationQuery}" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />
    <property name="testWhileIdle" value="true" />
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000" />
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="25200000" />
    <!-- 打开removeAbandoned功能 -->
    <property name="removeAbandoned" value="true" />
    <!-- 1800秒，也就是30分钟 -->
    <property name="removeAbandonedTimeout" value="1800" />
    <!-- 关闭abanded连接时输出错误日志 -->
    <property name="logAbandoned" value="true" />
    <!-- 监控数据库 -->
    <!-- <property name="filters" value="stat" /> -->
    <property name="filters" value="mergeStat" />
  </bean>

    <bean id="dataSourceMaster" class="com.alibaba.druid.pool.DruidDataSource" parent="dataSourceParent">
        <property name="url" value="${master_jdbc_url}" />
        <property name="username" value="${master_jdbc_username}" />
        <property name="password" value="${master_jdbc_password}" />
    </bean>

    <bean id="dataSourceSlave" class="com.alibaba.druid.pool.DruidDataSource" parent="dataSourceParent">
        <property name="url" value="${slave_jdbc_url}" />
        <property name="username" value="${slave_jdbc_username}" />
        <property name="password" value="${slave_jdbc_password}" />
    </bean>

    <bean id="dataSource" class="com.lxht.emos.data.EmosDataSource">
        <property name="targetDataSources">
           <map key-type="java.lang.String">
               <entry key="master" value-ref="dataSourceMaster"/>
               <entry key="slave" value-ref="dataSourceSlave" />
           </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSourceMaster" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource"/>
      <property name="mapperLocations" value="classpath*:mybatis-*.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hysoft.video.**.dao"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
       <tx:attributes>
           <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
           <tx:method name="add*"    propagation="REQUIRED" rollback-for="Exception"/>
           <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
           <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
           <tx:method name="save*"   propagation="REQUIRED" rollback-for="Exception"/>
           <tx:method name="select*"  propagation="REQUIRED" read-only="true" />
           <tx:method name="query*"  propagation="REQUIRED" read-only="true" />
           <tx:method name="get*"    propagation="REQUIRED" read-only="true" />
           <tx:method name="*"       propagation="SUPPORTS" />
       </tx:attributes>
    </tx:advice>

    <bean id="dataSourceAspect" class="com.lxht.emos.data.EmosDataSourceAspect" />

    <aop:config>
        <aop:pointcut id="tranPointcut" expression="bean(*Service)"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="tranPointcut" order="2" />
        <aop:aspect id="tranAspect" ref="dataSourceAspect" order="1" >
           <aop:before method="before" pointcut-ref="tranPointcut"/>
        </aop:aspect>
    </aop:config>
</beans>
